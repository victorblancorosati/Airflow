# Este archivo carga un DAG con comandos BASH
# 1) Descargar el archivo en un staging
# 2) Crear el archivo py en terminal
# 3) Crear el DAG en terminal
#    cp ETL_toll_data.py   $AIRFLOW_HOME/dags
#    airflow dags unpause ETL_toll_data


##################################################
# archivo ETL_toll_data.py 
##################################################
from datetime import timedelta
# The DAG object; we'll need this to instantiate a DAG
from airflow import DAG
# Operators; we need this to write tasks!
from airflow.operators.bash_operator import BashOperator
# This makes scheduling easy
from airflow.utils.dates import days_ago


default_args = {
    'owner': 'Victor Blanco',
    'start_date': days_ago(0),
    'email': ['victorblancorosati@gmail.com'],
    'email_on_failure': True,
    'email_on_retry': True,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

# define the DAG
dag = DAG(
    'ETL_toll_data',
    default_args=default_args,
    description='Apache Airflow Final Assigment',
    schedule_interval=timedelta(days=1),
)
# descomprimir archivo

unzip_data = BashOperator(
    task_id='unzip_data',
    bash_command= 'tar -xvzf /home/project/airflow/dags/finalassignment/tolldata.tgz -C /home/project/airflow/dags/finalassignment',
    #bash_command = 'tar -xvzf tolldata.tgz',
    #cwd = dag
    dag=dag,
)
# extrae data desde csv

extract_data_from_csv = BashOperator(
    task_id = 'extract_data_from_csv',
    bash_command = 'cut -d"," -f1-4 /home/project/airflow/dags/finalassignment/vehicle-data.csv > /home/project/airflow/dags/finalassignment/staging/csv_data.csv',
    dag = dag,
)

# extrae data desde tsv 

extract_data_from_tsv = BashOperator(
    task_id = 'extract_data_from_tsv',
    bash_command = 'cut -d" " -f5-7 /home/project/airflow/dags/finalassignment/tollplaza-data.tsv | tr -d "\r" | tr "[:blank:]" "," > /home/project/airflow/dags/finalassignment/staging/tsv_data.csv',
    dag = dag,
)

# Extrae data desde archivo con columnas fijas

extract_data_from_fixed_width = BashOperator(
    task_id = 'extract_data_from_fixed_width',
    bash_command = 'cut -b59-67 </home/project/airflow/dags/finalassignment/payment-data.txt | tr " " ","> /home/project/airflow/dags/finalassignment/staging/fixed_width_data.csv',
    dag = dag,
)

# data consolidada 

consolidate_data = BashOperator(
    task_id = 'consolidate_data',
    bash_command = 'paste /home/project/airflow/dags/finalassignment/staging/csv_data.csv /home/project/airflow/dags/finalassignment/staging/tsv_data.csv /home/project/airflow/dags/finalassignment/staging/fixed_width_data.csv > /home/project/airflow/dags/finalassignment/staging/extracted_data.csv',
    dag = dag,
)
# Trasformar data

transform_data = BashOperator(
    task_id = 'transform_data',
    bash_command = 'cut -d "," -f4 /home/project/airflow/dags/finalassignment/staging/extracted_data.csv | tr "[a-z]" "[A-Z]" > /home/project/airflow/dags/finalassignment/staging/transformed_data.csv',
    dag = dag,
)

## Definir pipeline
unzip_data >> extract_data_from_csv >> extract_data_from_tsv >> extract_data_from_fixed_width >> consolidate_data >> transform_data
